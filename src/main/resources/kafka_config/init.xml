<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2017, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->

<template xmlns="http://ws.apache.org/ns/synapse" name="init">
    <parameter name="name" description="Unique name to identify the connection by."/>
    <parameter name="bootstrapServers" description="The format is host1:port1,host2:port2"/>
    <parameter name="keySerializerClass"
               description="Serializer class for key that implements the Serializer interface."/>
    <parameter name="valueSerializerClass"
               description="Serializer class for value that implements the Serializer interface."/>
    <parameter name="schemaRegistryUrl" description="The confluent schema registry url"/>
    <parameter name="basicAuthCredentialsSource" description="Specify how to pick the credentials for Schema Registry Basic Auth header."/>
    <parameter name="basicAuthUserInfo" description="Specify the user info Basic Auth in the form of {username}:{password}"/>
    <parameter name="acks"
               description="The number of acknowledgments the producer requires the leader to have received before
               considering a request complete."/>
    <parameter name="bufferMemory"
               description="The total bytes of memory the producer can use to buffer records waiting to be sent to
               the server."/>
    <parameter name="compressionType" description="The compression type for all data generated by the producer."/>
    <parameter name="retries"
               description="Setting a value greater than zero will cause the client to resend any record whose send
               fails with a potentially transient error."/>
    <parameter name="sslKeyPassword"
               description="The password of the private key in the key store file. This is optional for client."/>
    <parameter name="sslKeystoreLocation"
               description="The location of the key store file. This is optional for client and can be used for two-way
                authentication for client."/>
    <parameter name="sslKeystorePassword"
               description="The store password for the key store file. This is optional for client and only needed if
               ssl.keystore.location is configured."/>
    <parameter name="sslTruststoreLocation" description="The location of the trust store file."/>
    <parameter name="sslTruststorePassword" description="The password for the trust store file."/>
    <parameter name="batchSize"
               description="The producer will attempt to batch records together into fewer requests whenever multiple
               records are being sent to the same partition"/>
    <parameter name="clientId" description="An id string to pass to the server when making requests. "/>
    <parameter name="connectionsMaxIdleTime"
               description="Close idle connections after the number of milliseconds specified by this config."/>
    <parameter name="lingerTime"
               description="The producer groups together any records that arrive in between request transmissions into
               a single batched request."/>
    <parameter name="maxBlockTime"
               description="The configuration controls how long KafkaProducer.send() and KafkaProducer.partitionsFor()
               will block."/>
    <parameter name="maxRequestSize" description="The maximum size of a request in bytes. "/>
    <parameter name="partitionerClass" description="Partitioner class that implements the Partitioner interface."/>
    <parameter name="receiveBufferBytes"
               description="The size of the TCP receive buffer (SO_RCVBUF) to use when reading data."/>
    <parameter name="requestTimeout"
               description="The configuration controls the maximum amount of time the client will wait for the response
               of a request."/>
    <parameter name="saslJaasConfig"
               description="JAAS login context parameters for SASL connections in the format used by JAAS configuration
               files"/>
    <parameter name="saslKerberosServiceName" description="The Kerberos principal name that Kafka runs as."/>
    <parameter name="saslMechanism" description="Mechanism used for SASL"/>
    <parameter name="securityProtocol" description="Protocol used to communicate with brokers."/>
    <parameter name="sendBufferBytes"
               description="The size of the TCP send buffer (SO_SNDBUF) to use when sending data."/>
    <parameter name="sslEnabledProtocols" description="The list of protocols enabled for SSL connections."/>
    <parameter name="sslKeystoreType"
               description="The file format of the key store file. This is optional for client."/>
    <parameter name="sslProtocol" description="The SSL protocol used to generate the SSLContext."/>
    <parameter name="sslProvider"
               description="The name of the security provider used for SSL connections. Default value is the default
               security provider of the JVM."/>
    <parameter name="sslTruststoreType" description="The file format of the trust store file."/>
    <parameter name="timeout"
               description="The configuration controls the maximum amount of time the server will wait for
               acknowledgments from followers to meet the acknowledgment requirements the producer has specified with
               the acks configuration"/>
    <parameter name="blockOnBufferFull"
               description="When our memory buffer is exhausted we must either stop accepting new records (block) or
               throw errors."/>
    <parameter name="maxInFlightRequestsPerConnection"
               description="The maximum number of unacknowledged requests the client will send on a single connection
               before blocking."/>
    <parameter name="metadataFetchTimeout"
               description="The first time data is sent to a topic we must fetch metadata about that topic to know which
               servers host the topic's partitions."/>
    <parameter name="metadataMaxAge"
               description="The period of time in milliseconds after which we force a refresh of metadata even if we
               haven't seen any partition leadership changes to proactively discover any new brokers or partitions."/>
    <parameter name="metricReporters" description="A list of classes to use as metrics reporters."/>
    <parameter name="metricsNumSamples" description="The number of samples maintained to compute metrics."/>
    <parameter name="metricsSampleWindow" description="The window of time a metrics sample is computed over."/>
    <parameter name="reconnectBackoff"
               description="The amount of time to wait before attempting to reconnect to a given host. "/>
    <parameter name="retryBackoff"
               description="The amount of time to wait before attempting to retry a failed request to a given topic
               partition."/>
    <parameter name="saslKerberosKinitCmd" description="Kerberos kinit command path."/>
    <parameter name="saslKerberosMinTimeBeforeRelogin" description="Login thread sleep time between refresh attempts."/>
    <parameter name="saslKerberosTicketRenewJitter"
               description="Percentage of random jitter added to the renewal time."/>
    <parameter name="saslKerberosTicketRenewWindowFactor"
               description="Login thread will sleep until the specified window factor of time from last refresh to
               ticket's expiry has been reached, at which time it will try to renew the ticket."/>
    <parameter name="sslCipherSuites" description="A list of cipher suites. "/>
    <parameter name="sslEndpointIdentificationAlgorithm"
               description="The endpoint identification algorithm to validate server hostname using server
               certificate."/>
    <parameter name="sslKeymanagerAlgorithm"
               description="The algorithm used by key manager factory for SSL connections. Default value is the key
               manager factory algorithm configured for the Java Virtual Machine."/>
    <parameter name="sslSecureRandomImplementation"
               description="The SecureRandom PRNG implementation to use for SSL cryptography operations."/>
    <parameter name="sslTrustmanagerAlgorithm"
               description="The algorithm used by trust manager factory for SSL connections. Default value is the trust
               manager factory algorithm configured for the Java Virtual Machine."/>
    <parameter name="poolingEnabled"
               description="Whether pooling is enabled for connections."/>
    <parameter name="maxActiveConnections"
               description="Maximum number of active connections in the pool"/>
    <parameter name="maxIdleConnections"
               description="Maximum number of idle connections in the pool"/>
    <parameter name="maxWaitTime"
               description="Maximum time to wait for a pooled component to become available"/>
    <parameter name="minEvictionTime"
               description="The minimum amount of time an object may sit idle in the pool before it is eligible for eviction"/>
    <parameter name="evictionCheckInterval"
               description="The number of milliseconds between runs of the object evictor"/>
    <parameter name="exhaustedAction"
               description="The behavior of the pool when the pool is exhausted."/>
    <parameter name="useLatestVersion" description="Serializer retrieve the latest schema version for the subject"/>
    <parameter name="autoRegisterSchemas" description="Serializer will/will not attempt to register new schemas"/>
    <parameter name="subjectNameStrategy" description="specify the strategy for determining the subject name under
        which the value schema is registered"/>
    <parameter name="keySubjectNameStrategy" description="specify the strategy for determining the subject name under
        which the key schema is registered"/>
    <parameter name="saslOauthbearerTokenEndpointUrl" description="The URL for the OAuth/OIDC identity provider"/>
    <parameter name="saslLoginCallbackHandlerClass" description="The fully qualified name of a SASL login callback handler
    class that implements the AuthenticateCallbackHandler interface."/>
    <parameter name="saslOauthbearerScopeClaimName" description="(optional) The override name of the scope claim."/>
    <parameter name="saslLoginConnectTimeout" description="(optional) The duration, in milliseconds, for HTTPS connect
    timeout."/>
    <parameter name="saslLoginReadTimeout" description="(optional) The duration, in milliseconds, for HTTPS read timeout."/>
    <parameter name="saslLoginRetryBackoff" description="(optional) The duration, in milliseconds, to wait between
    HTTPS call attempts."/>
    <parameter name="saslLoginRetryBackoffMax" description="(optional) The maximum duration, in milliseconds, for
    HTTPS call attempts."/>
    <parameter name="enableIdempotence" description="When set to ‘true’, the producer will ensure that exactly one copy
    of each message is written in the stream. If ‘false’, producer retries due to broker failures, etc., may write
    duplicates of the retried message in the stream."/>
    <parameter name="messageSendMaxRetries" description="This property will cause the producer to automatically retry
    a failed send request."/>
    <parameter name="reconnectBackoffMax" description="The maximum amount of time in milliseconds to wait
    when reconnecting to a broker that has repeatedly failed to connect."/>
    <parameter name="sendCallbackHandlerClass" description="The class name of the Kafka send callback handler
               implementation."/>
    <sequence>
        <property expression="$func:schemaRegistryUrl" name="kafka.schemaRegistryUrl"/>
        <property expression="$func:basicAuthCredentialsSource" name="kafka.basicAuthCredentialsSource"/>
        <property expression="$func:basicAuthUserInfo" name="kafka.basicAuthUserInfo"/>
        <property expression="$func:name" name="name"/>
        <property expression="$func:bootstrapServers" name="kafka.bootstrapServers"
                  scope="operation" type="STRING"/>
        <property expression="$func:keySerializerClass" name="kafka.keySerializerClass"/>
        <property expression="$func:valueSerializerClass" name="kafka.valueSerializerClass"/>
        <property expression="$func:acks" name="kafka.acks"/>
        <property expression="$func:bufferMemory" name="kafka.bufferMemory"/>
        <property expression="$func:compressionType" name="kafka.compressionType"/>
        <property expression="$func:retries" name="kafka.retries"/>
        <property expression="$func:sslKeyPassword" name="kafka.sslKeyPassword"/>
        <property expression="$func:sslKeystoreLocation" name="kafka.sslKeystoreLocation"/>
        <property expression="$func:sslKeystorePassword" name="kafka.sslKeystorePassword"/>
        <property expression="$func:sslTruststoreLocation" name="kafka.sslTruststoreLocation"/>
        <property expression="$func:sslTruststorePassword" name="kafka.sslTruststorePassword"/>
        <property expression="$func:batchSize" name="kafka.batchSize"/>
        <property expression="$func:clientId" name="kafka.clientId"/>
        <property expression="$func:connectionsMaxIdleTime" name="kafka.connectionsMaxIdleTime"/>
        <property expression="$func:lingerTime" name="kafka.lingerTime"/>
        <property expression="$func:maxBlockTime" name="kafka.maxBlockTime"/>
        <property expression="$func:maxRequestSize" name="kafka.maxRequestSize"/>
        <property expression="$func:partitionerClass" name="kafka.partitionerClass"/>
        <property expression="$func:receiveBufferBytes" name="kafka.receiveBufferBytes"/>
        <property expression="$func:requestTimeout" name="kafka.requestTimeout"/>
        <property expression="$func:saslJaasConfig" name="kafka.saslJaasConfig"/>
        <property expression="$func:saslKerberosServiceName" name="kafka.saslKerberosServiceName"/>
        <property expression="$func:saslMechanism" name="kafka.saslMechanism"/>
        <property expression="$func:securityProtocol" name="kafka.securityProtocol"/>
        <property expression="$func:sendBufferBytes" name="kafka.sendBufferBytes"/>
        <property expression="$func:sslEnabledProtocols" name="kafka.sslEnabledProtocols"/>
        <property expression="$func:sslKeystoreType" name="kafka.sslKeystoreType"/>
        <property expression="$func:sslProtocol" name="kafka.sslProtocol"/>
        <property expression="$func:sslProvider" name="kafka.sslProvider"/>
        <property expression="$func:sslTruststoreType" name="kafka.sslTruststoreType"/>
        <property expression="$func:timeout" name="kafka.timeout"/>
        <property expression="$func:blockOnBufferFull" name="kafka.blockOnBufferFull"/>
        <property expression="$func:maxInFlightRequestsPerConnection" name="kafka.maxInFlightRequestsPerConnection"/>
        <property expression="$func:metadataFetchTimeout" name="kafka.metadataFetchTimeout"/>
        <property expression="$func:metadataMaxAge" name="kafka.metadataMaxAge"/>
        <property expression="$func:metricReporters" name="kafka.metricReporters"/>
        <property expression="$func:metricsNumSamples" name="kafka.metricsNumSamples"/>
        <property expression="$func:metricsSampleWindow" name="kafka.metricsSampleWindow"/>
        <property expression="$func:reconnectBackoff" name="kafka.reconnectBackoff"/>
        <property expression="$func:retryBackoff" name="kafka.retryBackoff"/>
        <property expression="$func:saslKerberosKinitCmd" name="kafka.saslKerberosKinitCmd"/>
        <property expression="$func:saslKerberosMinTimeBeforeRelogin" name="kafka.saslKerberosMinTimeBeforeRelogin"/>
        <property expression="$func:saslKerberosTicketRenewJitter" name="kafka.saslKerberosTicketRenewJitter"/>
        <property expression="$func:saslKerberosTicketRenewWindowFactor"
                  name="kafka.saslKerberosTicketRenewWindowFactor"/>
        <property expression="$func:sslCipherSuites" name="kafka.sslCipherSuites"/>
        <property expression="$func:sslEndpointIdentificationAlgorithm"
                  name="kafka.sslEndpointIdentificationAlgorithm"/>
        <property expression="$func:sslKeymanagerAlgorithm" name="kafka.sslKeymanagerAlgorithm"/>
        <property expression="$func:sslSecureRandomImplementation" name="kafka.sslSecureRandomImplementation"/>
        <property expression="$func:sslTrustmanagerAlgorithm" name="kafka.sslTrustmanagerAlgorithm"/>
        <property expression="$func:poolingEnabled" name="kafka.poolingEnabled"/>
        <property name="maxActiveConnections" expression="$func:maxActiveConnections"/>
        <property name="maxIdleConnections" expression="$func:maxIdleConnections"/>
        <property name="maxWaitTime" expression="$func:maxWaitTime"/>
        <property name="minEvictionTime" expression="$func:minEvictionTime"/>
        <property name="evictionCheckInterval" expression="$func:evictionCheckInterval"/>
        <property name="exhaustedAction" expression="$func:exhaustedAction"/>
        <property name="kafka.useLatestVersion" expression="$func:useLatestVersion"/>
        <property name="kafka.autoRegisterSchemas" expression="$func:autoRegisterSchemas"/>
        <property name="kafka.subjectNameStrategy" expression="$func:subjectNameStrategy"/>
        <property name="kafka.saslOauthbearerTokenEndpointUrl" expression="$func:saslOauthbearerTokenEndpointUrl"/>
        <property name="kafka.saslOauthbearerScopeClaimName" expression="$func:saslOauthbearerScopeClaimName"/>
        <property name="kafka.saslLoginConnectTimeout" expression="$func:saslLoginConnectTimeout"/>
        <property name="kafka.saslLoginReadTimeout" expression="$func:saslLoginReadTimeout"/>
        <property name="kafka.saslLoginRetryBackoff" expression="$func:saslLoginRetryBackoff"/>
        <property name="kafka.saslLoginRetryBackoffMax" expression="$func:saslLoginRetryBackoffMax"/>
        <property name="kafka.saslLoginCallbackHandlerClass" expression="$func:saslLoginCallbackHandlerClass"/>
        <property name="kafka.enableIdempotence" expression="$func:enableIdempotence"/>
        <property name="kafka.messageSendMaxRetries" expression="$func:messageSendMaxRetries"/>
        <property name="kafka.reconnectBackoffMax" expression="$func:reconnectBackoffMax"/>
        <property name="kafka.sendCallbackHandlerClass" expression="$func:sendCallbackHandlerClass"/>
        <class name="org.wso2.carbon.connector.KafkaConfigConnector"/>
    </sequence>
</template>
